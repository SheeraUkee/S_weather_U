import time

import requests
from aiogram import Dispatcher, types
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup

KEY = "54ffac44c73196951917bf3cbb5f6f80"
URL = "https://api.openweathermap.org/data/2.5/weather"
from data_config import dp, bot

key_sity = [
    "–û–±–Ω–æ–≤–∏—Ç—å üîÅ",
    "–ù–∞–∑–∞–¥ ‚Ü©Ô∏è",
    "–£–¥–∞–ª–∏—Ç—å üóë"
]


@dp.callback_query_handler(text=[
    "–ê–±–∞–π_M",
    "–ê–∫–∫–æ–ª—å_M",
    "–ê–∫—Å–∞–π_M",
    "–ê–∫—Å—É_M",
    "–ê–∫—Ç–∞—É_M",
    "–ê–∫—Ç–æ–±–µ_M",
    "–ê–ª–≥–∞_M",
    "–ê–ª–º–∞—Ç—ã_M",
    "–ê–ª—Ç–∞–π_M",
    "–ê—Ä–∞–ª—å—Å–∫_M",
    "–ê—Ä–∫–∞–ª—ã–∫_M",
    "–ê—Ä—ã—Å_M",
    "–ê—Ç–±–∞—Å–∞—Ä_M",
    "–ê—Ç—ã—Ä–∞—É_M",
    "–ê—è–≥–æ–∑_M",
    "–ë–∞–π–∫–æ–Ω—É—Ä_M",
    "–ë–∞–ª—Ö–∞—à_M",
    "–î–µ—Ä–∂–∞–≤–∏–Ω—Å–∫_M",
    "–ï—Ä–µ–π–º–µ–Ω—Ç–∞—É_M",
    "–ï—Å–∏–∫_M",
    "–ï—Å–∏–ª—å_M",
    "–ñ–∞–Ω–∞–æ–∑–µ–Ω_M",
    "–ñ–∞–Ω–∞—Ç–∞—Å_M",
    "–ñ–∞—Ä–∫–µ–Ω—Ç_M",
    "–ñ–µ–∑–∫–∞–∑–≥–∞–Ω_M",
    "–ñ–µ–º_M",
    "–ñ–µ—Ç—ã—Å–∞–π_M",
    "–ñ–∏—Ç–∏–∫–∞—Ä–∞_M",
    "–ë—É–ª–∞–µ–≤–æ_M",
    "–ó–∞–π—Å–∞–Ω_M",
    "–ó—ã—Ä—è–Ω–æ–≤—Å–∫_M",
    "–ö–∞–∑–∞–ª–∏–Ω—Å–∫_M",
    "–ö–∞–Ω–¥—ã–∞–≥–∞—à_M",
    "–ö–∞–ø—à–∞–≥–∞–π_M",
    "–ö–∞—Ä–∞–≥–∞–Ω–¥—ã_M",
    "–ö–∞—Ä–∞–∂–∞–ª_M",
    "–ö–∞—Ä–∞—Ç–∞—É_M",
    "–ö–∞—Ä–∫–∞—Ä–∞–ª–∏–Ω—Å–∫_M",
    "–ö–µ–Ω—Ç–∞—É_M",
    "–ö–æ–∫—à–µ—Ç–∞—É_M",
    "–ö–æ—Å—Ç–∞–Ω–∞–π_M",
    "–ö—É–ª—Å–∞—Ä—ã_M",
    "–ö—É—Ä—á–∞—Ç–æ–≤_M",
    "–ö—ã–∑—ã–ª–æ—Ä–¥–∞_M",
    "–õ–µ–Ω–≥–µ—Ä_M",
    "–õ–∏—Å–∞–∫–æ–≤—Å–∫_M",
    "–ú–∞–∫–∏–Ω—Å–∫_M",
    "–ú–∞–º–ª—é—Ç–∫–∞_M",
    "–ù—É—Ä-–°—É–ª—Ç–∞–Ω_M",
    "–ü–∞–≤–ª–æ–¥–∞—Ä_M",
    "–ü–µ—Ç—Ä–æ–ø–∞–≤–ª–æ–≤—Å–∫_M",
    "–ü—Ä–∏–æ–∑—ë—Ä—Å–∫_M",
    "–†–∏–¥–¥–µ—Ä_M",
    "–†—É–¥–Ω—ã–π_M",
    "–°–∞—Ä–∞–Ω—å_M",
    "–°–∞—Ä–∫–∞–Ω–¥_M",
    "–°–∞—Ä—ã–∞–≥–∞—à_M",
    "–°–∞—Ç–ø–∞–µ–≤_M",
    "–°–µ–º–µ–π_M",
    "–°–µ—Ä–≥–µ–µ–≤–∫–∞_M",
    "–°–µ—Ä–µ–±—Ä—è–Ω—Å–∫_M",
    "–°—Ç–µ–ø–Ω–æ–≥–æ—Ä—Å–∫_M",
    "–°—Ç–µ–ø–Ω—è–∫_M",
    "–¢–∞–π—ã–Ω—à–∞_M",
    "–¢–∞–ª–≥–∞—Ä_M",
    "–¢–∞–ª–¥—ã–∫–æ—Ä–≥–∞–Ω_M",
    "–¢–∞—Ä–∞–∑_M",
    "–¢–µ–∫–µ–ª–∏_M",
    "–¢–µ–º–∏—Ä_M",
    "–¢–µ–º–∏—Ä—Ç–∞—É_M",
    "–¢—É—Ä–∫–µ—Å—Ç–∞–Ω_M",
    "–£—Ä–∞–ª—å—Å–∫_M",
    "–£—Å—Ç—å-–ö–∞–º–µ–Ω–æ–≥–æ—Ä—Å–∫_M",
    "–£—à–∞—Ä–∞–ª_M",
    "–£—à—Ç–æ–±–µ_M",
    "–§–æ—Ä—Ç-–®–µ–≤—á–µ–Ω–∫–æ_M",
    "–•—Ä–æ–º—Ç–∞—É_M",
    "–®–∞–ª–∫–∞—Ä_M",
    "–®–∞—Ä_M",
    "–®–∞—Ä–¥–∞—Ä–∞_M",
    "–®–∞—Ö—Ç–∏–Ω—Å–∫_M",
    "–®–µ–º–æ–Ω–∞–∏—Ö–∞_M",
    "–®—É_M",
    "–®—ã–º–∫–µ–Ω—Ç_M",
    "–©—É—á–∏–Ω—Å–∫_M"
    "–≠–∫–∏–±–∞—Å—Ç—É–∑_M",
    "–≠–º–±–∞_M"
])
async def call_weather_sity_key_mm(call: types.CallbackQuery):
    a = "Almaty, KZ"

    call_sity = call.data
    call_index = call_sity[0]
    call_call = str(call.data) + "1"
    print(call_call)
    def_info_weather = InlineKeyboardMarkup()
    def_info_weather.add(InlineKeyboardButton(text=key_sity[0], callback_data=call.data))
    def_info_weather.insert(InlineKeyboardButton(text=key_sity[2], callback_data="delet"))
    def_info_weather.add(InlineKeyboardButton(text=key_sity[1], callback_data=call_index + "_m"))

    if call.data == "–≠–∫–∏–±–∞—Å—Ç—É–∑_M":
        a = "Ekibastuz, KZ"
        area = "–ü–∞–≤–ª–æ–¥–∞—Ä—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"

    elif call.data == "–≠–º–±–∞_M":
        a = "Emba, KZ"
        area = "–ê–∫—Ç—é–±–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"

    if call.data == "–©—É—á–∏–Ω—Å–∫_M":
        a = "Shchuchinsk, KZ"
        area = "–ê–∫–º–æ–ª–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"

    if call.data == "–®–∞–ª–∫–∞—Ä_M":
        a = "Shalkar, KZ"
        area = "–ê–∫—Ç—é–±–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"

    elif call.data == "–®–∞—Ä_M":
        a = "Shardara, KZ"
        area = "–Æ–∂–Ω–æ-–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"

    elif call.data == "–®–∞—Ä–¥–∞—Ä–∞_M":
        a = "Shardara, KZ"
        area = "–Æ–∂–Ω–æ-–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"

    elif call.data == "–®–∞—Ö—Ç–∏–Ω—Å–∫_M":
        a = "Shakhtinsk, KZ"
        area = "–ö–∞—Ä–∞–≥–∞–Ω–¥–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"

    elif call.data == "–®–µ–º–æ–Ω–∞–∏—Ö–∞_M":
        a = "Shemonaikha, KZ"
        area = "–í–æ—Å—Ç–æ—á–Ω–æ-–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"

    elif call.data == "–®—É_M":
        a = "Shu, KZ"
        area = "–ñ–∞–º–±—ã–ª—å—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"

    elif call.data == "–®—ã–º–∫–µ–Ω—Ç_M":
        a = "Shymkent, KZ"
        area = "–Æ–∂–Ω–æ-–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"

    if call.data == "–•—Ä–æ–º—Ç–∞—É_M":
        a = "Khromtau, KZ"
        area = "–ê–∫—Ç—é–±–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"

    if call.data == "–§–æ—Ä—Ç-–®–µ–≤—á–µ–Ω–∫–æ_M":
        a = "Fort-Shevchenko, KZ"
        area = "–ú–∞–Ω–≥–∏—Å—Ç–∞—É—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"

    if call.data == "–£—Ä–∞–ª—å—Å–∫_M":
        a = "Uralsk, KZ"
        area = "–ó–∞–ø–∞–¥–Ω–æ-–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"

    elif call.data == "–£—Å—Ç—å-–ö–∞–º–µ–Ω–æ–≥–æ—Ä—Å–∫_M":
        a = "Ust-Kamenogorsk, KZ"
        area = "–í–æ—Å—Ç–æ—á–Ω–æ-–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"

    elif call.data == "–£—à–∞—Ä–∞–ª_M":
        a = "Usharal, KZ"
        area = "–ê–ª–º–∞—Ç–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"

    elif call.data == "–£—à—Ç–æ–±–µ_M":
        a = "Ushtobe, KZ"
        area = "–ê–ª–º–∞—Ç–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"

    if call.data == "–¢–∞–π—ã–Ω—à–∞_M":
        a = "Taiynsha, KZ"
        area = "–°–µ–≤–µ—Ä–æ-–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"

    elif call.data == "–¢–∞–ª–≥–∞—Ä_M":
        a = "Talgar, KZ"
        area = "–ê–ª–º–∞—Ç–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"

    elif call.data == "–¢–∞–ª–¥—ã–∫–æ—Ä–≥–∞–Ω_M":
        a = "Taldykorgan, KZ"
        area = "–ê–ª–º–∞—Ç–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"

    elif call.data == "–¢–∞—Ä–∞–∑_M":
        a = "Taraz, KZ"
        area = "–ñ–∞–º–±—ã–ª—å—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"

    elif call.data == "–¢–µ–∫–µ–ª–∏_M":
        a = "Tekeli, KZ"
        area = "–ê–ª–º–∞—Ç–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"

    elif call.data == "–¢–µ–º–∏—Ä_M":
        a = "Temir, KZ"
        area = "–ê–∫—Ç—é–±–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"

    elif call.data == "–¢–µ–º–∏—Ä—Ç–∞—É_M":
        a = "Temirtau, KZ"
        area = "–ö–∞—Ä–∞–≥–∞–Ω–¥–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"

    elif call.data == "–¢—É—Ä–∫–µ—Å—Ç–∞–Ω_M":
        a = "Turkestan, KZ"
        area = "–Æ–∂–Ω–æ-–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"

    if call.data == "–°–∞—Ä–∞–Ω—å_M":
        a = "Saran, KZ"
        area = "–ö–∞—Ä–∞–≥–∞–Ω–¥–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"

    elif call.data == "–°–∞—Ä–∫–∞–Ω–¥_M":
        a = "Sarkand, KZ"
        area = "–ê–ª–º–∞—Ç–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"

    elif call.data == "–°–∞—Ä—ã–∞–≥–∞—à_M":
        a = "Saryagash, KZ"
        area = "	–Æ–∂–Ω–æ-–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"

    elif call.data == "–°–∞—Ç–ø–∞–µ–≤_M":
        a = "Satpaev, KZ"
        area = "–ö–∞—Ä–∞–≥–∞–Ω–¥–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"

    elif call.data == "–°–µ–º–µ–π_M":
        a = "Semey, KZ"
        area = "–í–æ—Å—Ç–æ—á–Ω–æ-–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"

    elif call.data == "–°–µ—Ä–≥–µ–µ–≤–∫–∞_M":
        a = "Sergeyevka, KZ"
        area = "–°–µ–≤–µ—Ä–æ-–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"

    elif call.data == "–°–µ—Ä–µ–±—Ä—è–Ω—Å–∫_M":
        a = "Serebryansk, KZ"
        area = "–í–æ—Å—Ç–æ—á–Ω–æ-–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"

    elif call.data == "–°—Ç–µ–ø–Ω–æ–≥–æ—Ä—Å–∫_M":
        a = "Stepnogorsk, KZ"
        area = "–ê–∫–º–æ–ª–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"

    elif call.data == "–°—Ç–µ–ø–Ω—è–∫_M":
        a = "Stepnyak, KZ"
        area = "–ê–∫–º–æ–ª–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"

    if call.data == "–†–∏–¥–¥–µ—Ä_M":
        a = "Ridder, KZ"
        area = "–í–æ—Å—Ç–æ—á–Ω–æ-–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"

    elif call.data == "–†—É–¥–Ω—ã–π_M":
        a = "Rudny, KZ"
        area = "–í–æ—Å—Ç–æ—á–Ω–æ-–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"

    if call.data == "–ü–∞–≤–ª–æ–¥–∞—Ä_M":
        a = "Pavlodar, KZ"
        area = "–ü–∞–≤–ª–æ–¥–∞—Ä—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"

    elif call.data == "–ü–µ—Ç—Ä–æ–ø–∞–≤–ª–æ–≤—Å–∫_M":
        a = "Petropavlovsk, KZ"
        area = "–°–µ–≤–µ—Ä–æ-–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"

    elif call.data == "–ü—Ä–∏–æ–∑—ë—Ä—Å–∫_M":
        a = "Priozersk, KZ"
        area = "–ö–∞—Ä–∞–≥–∞–Ω–¥–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"

    if call.data == "–ù—É—Ä-–°—É–ª—Ç–∞–Ω_M":
        a = "Nur-Sultan, KZ"
        area = "–ê–∫–º–æ–ª–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"

    if call.data == "–ú–∞–∫–∏–Ω—Å–∫_M":
        a = "Makinsk, KZ"
        area = "–ê–∫–º–æ–ª–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"

    elif call.data == "–ú–∞–º–ª—é—Ç–∫–∞_M":
        a = "Mamlyutka, KZ"
        area = "–°–µ–≤–µ—Ä–æ-–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"

    if call.data == "–ê–±–∞–π_M":  # 1.
        a = "Abai, KZ"
        area = "–ö–∞—Ä–∞–≥–∞–Ω–¥–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"

    elif call.data == "–ê–∫–∫–æ–ª—å_M":  # 2.
        a = "Akkol, KZ"
        area = "–ê–∫–º–æ–ª–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"

    elif call.data == "–ê–∫—Å–∞–π_M":  # 3.
        a = "Aksay, KZ"
        area = "–ó–∞–ø–∞–¥–Ω–æ-–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"

    elif call.data == "–ê–∫—Å—É_M":  # 4.
        a = "Aksu, KZ"
        area = "–ü–∞–≤–ª–æ–¥–∞—Ä—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"

    elif call.data == "–ê–∫—Ç–∞—É_M":  # 5.
        a = "Aktau, KZ"
        area = "–ú–∞–Ω–≥–∏—Å—Ç–∞—É—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"

    elif call.data == "–ê–∫—Ç–æ–±–µ_M":  # 6.
        a = "Aktobe, KZ"
        area = "–ê–∫—Ç—é–±–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"

    elif call.data == "–ê–ª–≥–∞_M":  # 7.
        a = "Alga, KZ"
        area = "–ê–∫—Ç—é–±–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"

    elif call.data == "–ê–ª–º–∞—Ç—ã_M":  # 8.
        a = "Almaty, KZ"
        area = "–ê–ª–º–∞—Ç—ã"

    elif call.data == "–ê–ª—Ç–∞–π_M":  # 9.
        a = "Altaysk, KZ"
        area = "–ö—ã–∑—ã–ª–æ—Ä–¥–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"

    elif call.data == "–ê—Ä–∞–ª—å—Å–∫_M":  # 10.
        a = "Aralsk, KZ"
        area = "–ö—ã–∑—ã–ª–æ—Ä–¥–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"

    elif call.data == "–ê—Ä–∫–∞–ª—ã–∫_M":  # 11.
        a = "Arkalyk, KZ"
        area = "–ö–æ—Å—Ç–∞–Ω–∞–π—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"

    elif call.data == "–ê—Ä—ã—Å_M":  # 12.
        a = "Arys, KZ"
        area = "–Æ–∂–Ω–æ-–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"

    elif call.data == "–ê—Ç–±–∞—Å–∞—Ä_M":  # 13.
        a = "Atbasar, KZ"
        area = "–ê–∫–º–æ–ª–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"

    elif call.data == "–ê—Ç—ã—Ä–∞—É_M":  # 14.
        a = "Atyrau, KZ"
        area = "–ê—Ç—ã—Ä–∞—É—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"

    elif call.data == "–ê—è–≥–æ–∑_M":  # 15.
        a = "Ayagoz, KZ"
        area = "–í–æ—Å—Ç–æ—á–Ω–æ-–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"

    if call.data == "–ë–∞–π–∫–æ–Ω—É—Ä_M":
        a = "Baikonur, KZ"
        area = "–ê—Ä–µ–Ω–¥—É–µ—Ç—Å—è –†–æ—Å—Å–∏–π—Å–∫–æ–π –§–µ–¥–µ—Ä–∞—Ü–∏–µ–π"

    elif call.data == "–ë–∞–ª—Ö–∞—à_M":
        a = "Balkhash, KZ"
        area = "–ö–∞—Ä–∞–≥–∞–Ω–¥–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"

    elif call.data == "–ë—É–ª–∞–µ–≤–æ_M":
        a = "Bulaevo, KZ"
        area = "–°–µ–≤–µ—Ä–æ-–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"

    if call.data == "–î–µ—Ä–∂–∞–≤–∏–Ω—Å–∫_M":
        a = "Derzhavinsk, KZ"
        area = "–ê–∫–º–æ–ª–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"

    if call.data == "–ï—Ä–µ–π–º–µ–Ω—Ç–∞—É_M":
        a = "Ereymentau, KZ"
        area = "–ê–∫–º–æ–ª–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"

    elif call.data == "–ï—Å–∏–∫_M":
        a = "Esik, KZ"
        area = "–ê–ª–º–∞—Ç–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"

    elif call.data == "–ï—Å–∏–ª—å_M":
        a = "Esil, KZ"
        area = "–ê–∫–º–æ–ª–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"

    if call.data == "–ñ–∞–Ω–∞–æ–∑–µ–Ω_M":
        a = "Zhanaozen, KZ"
        area = "–ú–∞–Ω–≥–∏—Å—Ç–∞—É—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"

    elif call.data == "–ñ–∞–Ω–∞—Ç–∞—Å_M":
        a = "Janatas, KZ"
        area = "–ñ–∞–º–±—ã–ª—å—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"

    elif call.data == "–ñ–∞—Ä–∫–µ–Ω—Ç_M":
        a = "Zharkent, KZ"
        area = "–ê–ª–º–∞—Ç–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"

    elif call.data == "–ñ–µ–∑–∫–∞–∑–≥–∞–Ω_M":
        a = "Zhezkazgan , KZ"
        area = "–ö–∞—Ä–∞–≥–∞–Ω–¥–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"

    elif call.data == "–ñ–µ–º_M":
        a = "Zhem, KZ"
        area = "–ê–∫—Ç—é–±–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"

    elif call.data == "–ñ–µ—Ç—ã—Å–∞–π_M":
        a = "Zhetisay, KZ"
        area = "–Æ–∂–Ω–æ-–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"

    elif call.data == "–ñ–∏—Ç–∏–∫–∞—Ä–∞_M":
        a = "Zhetikara, KZ"
        area = "–ö–æ—Å—Ç–∞–Ω–∞–π—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"

    if call.data == "–ó–∞–π—Å–∞–Ω_M":
        a = "Ereymentau, KZ"
        area = "–í–æ—Å—Ç–æ—á–Ω–æ-–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"

    elif call.data == "–ó—ã—Ä—è–Ω–æ–≤—Å–∫_M":
        a = "Esik, KZ"
        area = "–í–æ—Å—Ç–æ—á–Ω–æ-–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"

    if call.data == "–ö–∞–Ω–¥—ã–∞–≥–∞—à_M":
        a = "Kandyagash, KZ"
        area = "–ê–∫—Ç—é–±–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"

    elif call.data == "–ö–∞–ø—à–∞–≥–∞–π_M":
        a = "Kapshagai, KZ"
        area = "–ê–ª–º–∞—Ç–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"

    elif call.data == "–ö–∞—Ä–∞–≥–∞–Ω–¥–∞_M":
        a = "Karaganda, KZ"
        area = "–ö–∞—Ä–∞–≥–∞–Ω–¥–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"

    elif call.data == "–ö–∞—Ä–∞–∂–∞–ª_M":
        a = "Karazhal, KZ"
        area = "–ö–∞—Ä–∞–≥–∞–Ω–¥–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"

    elif call.data == "–ö–∞—Ä–∞—Ç–∞—É_M":
        a = "Karatau, KZ"
        area = "–ñ–∞–º–±—ã–ª—å—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"

    elif call.data == "–ö–∞—Ä–∫–∞—Ä–∞–ª–∏–Ω—Å–∫_M":
        a = "Karkaralinsk, KZ"
        area = "–ö–∞—Ä–∞–≥–∞–Ω–¥–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"

    elif call.data == "–ö–µ–Ω—Ç–∞—É_M":
        a = "Kentau, KZ"
        area = "–Æ–∂–Ω–æ-–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"

    elif call.data == "–ö–æ–∫—à–µ—Ç–∞—É_M":
        a = "Kokshetau, KZ"
        area = "–ê–∫–º–æ–ª–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"

    elif call.data == "–ö–æ—Å—Ç–∞–Ω–∞–π_M":
        a = "Kostanay, KZ"
        area = "–ö–æ—Å—Ç–∞–Ω–∞–π—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"

    elif call.data == "–ö—É–ª—Å–∞—Ä—ã_M":
        a = "Kulsary, KZ"
        area = "–ê—Ç—ã—Ä–∞—É—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"

    elif call.data == "–ö—É—Ä—á–∞—Ç–æ–≤_M":
        a = "Kurchatov, KZ"
        area = "–í–æ—Å—Ç–æ—á–Ω–æ-–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"

    elif call.data == "–ö—ã–∑—ã–ª–æ—Ä–¥–∞_M":
        a = "Kyzylorda, KZ"
        area = "–ö—ã–∑—ã–ª–æ—Ä–¥–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"

    if call.data == "–õ–µ–Ω–≥–µ—Ä_M":
        a = "Lenger, KZ"
        area = "–Æ–∂–Ω–æ-–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"

    elif call.data == "–õ–∏—Å–∞–∫–æ–≤—Å–∫_M":
        a = "Lisakovsk, KZ"
        area = "–ö–æ—Å—Ç–∞–Ω–∞–π—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"

    test = a

    city = test.capitalize()
    params = {
        "q": city,
        "appid": KEY,
        "units": "metric"
    }

    data = requests.get(URL, params)
    weather_city = data.json()

    # print(weather_city)
    weather_temp = weather_city["main"]["temp"]
    weather_main = weather_city["weather"][0]["main"]
    weather_feels_like = weather_city["main"]["feels_like"]
    weather_humidity = weather_city["main"]["humidity"]
    weather_visibility = weather_city["visibility"]
    weather_wind = weather_city["wind"]["speed"]

    print("\n")
    print(weather_temp, weather_main, weather_feels_like, weather_humidity, weather_visibility, weather_wind, end="\n")

    if weather_main == "Clouds":
        tran = "–û–±–ª–∞—á–Ω–æ —Å –ø—Ä–æ—è—Å–Ω–µ–Ω–∏—è–º–∏ Ô∏èÔ∏è"

    elif weather_main == "Mist":
        tran = "–¢—É–º–∞–Ω Ô∏è"

    elif weather_main == "Fog":
        tran = "–¢—É–º–∞–Ω"

    elif weather_main == "Smoke":
        tran = "–ü–∞—Å–º—É—Ä–Ω–æ"

    elif weather_main == "Clear":
        tran = "–Ø—Å–Ω–æ"

    elif weather_main == "Snow":
        tran = "–°–Ω–µ–≥"

    elif weather_main == "Rain":
        tran = "–î–æ–∂–¥—å"

    sss = call.data

    p = "–ì–æ—Ä–æ–¥ " + sss + " " + area + "\n" + tran + " " + str(
        int(weather_temp)) + " –≥—Ä–∞–¥—É—Å–æ–≤" + "\n" + "–ü–æ –æ—â—É—â–µ–Ω–∏—è–º " + \
        str(int(weather_feels_like)) + " –≥—Ä–∞–¥—É—Å–æ–≤" + " " + "–í–ª–∞–∂–Ω–æ—Å—Ç—å " + str(weather_humidity) + \
        " –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤" + " " + "–í–∏–¥–∏–º–æ—Å—Ç—å " + str(float(weather_visibility / 1000)) + " –∫–∏–ª–æ–º–µ—Ç—Ä–æ–≤" + " " + "–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞ " + \
        str(weather_wind) + " –º–µ—Ç—Ä–æ–≤ –≤ —Å–µ–∫—É–Ω–¥—É "
    assas = []

    for i in p:
        assas.append(i)

        if i == "–ê" or i == "–∞":
            await bot.send_message(call.from_user.id, ".")
            time.sleep(3)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(1)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(5)

        elif i == "–ë" or i == "–±":
            await bot.send_message(call.from_user.id, "_")
            time.sleep(1)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(3)
            await bot.send_message(call.from_user.id, ".")
            time.sleep(3)
            await bot.send_message(call.from_user.id, ".")
            time.sleep(3)
            await bot.send_message(call.from_user.id, ".")
            time.sleep(5)

        elif i == "–í" or i == "–≤":
            await bot.send_message(call.from_user.id, ".")
            time.sleep(3)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(1)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(3)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(1)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(5)

        elif i == "–ì" or i == "–≥":
            await bot.send_message(call.from_user.id, "_")
            time.sleep(1)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(3)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(1)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(3)
            await bot.send_message(call.from_user.id, ".")
            time.sleep(5)

        elif i == "–î" or i == "–¥":
            await bot.send_message(call.from_user.id, "_")
            time.sleep(1)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(3)
            await bot.send_message(call.from_user.id, ".")
            time.sleep(3)
            await bot.send_message(call.from_user.id, ".")
            time.sleep(5)

        elif i == "–ï" or i == "–µ":
            await bot.send_message(call.from_user.id, ".")
            time.sleep(5)

        elif i == "–ñ" or i == "–∂":
            await bot.send_message(call.from_user.id, ".")
            time.sleep(3)
            await bot.send_message(call.from_user.id, ".")
            time.sleep(3)
            await bot.send_message(call.from_user.id, ".")
            time.sleep(3)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(1)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(5)

        elif i == "–ó" or i == "–∑":
            await bot.send_message(call.from_user.id, "_")
            time.sleep(1)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(3)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(1)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(3)
            await bot.send_message(call.from_user.id, ".")
            time.sleep(3)
            await bot.send_message(call.from_user.id, ".")
            time.sleep(5)


        elif i == "–ò" or i == "–∏":
            await bot.send_message(call.from_user.id, ".")
            time.sleep(3)
            await bot.send_message(call.from_user.id, ".")
            time.sleep(5)

        elif i == "–ô" or i == "–π":
            await bot.send_message(call.from_user.id, ".")
            time.sleep(3)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(1)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(3)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(1)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(3)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(1)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(5)

        elif i == "–ö" or i == "–∫":
            await bot.send_message(call.from_user.id, "_")
            time.sleep(1)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(3)
            await bot.send_message(call.from_user.id, ".")
            time.sleep(3)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(1)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(5)

        elif i == "–õ" or i == "–ª":
            pass
            await bot.send_message(call.from_user.id, ".")
            time.sleep(3)
            await bot.send_message(call.from_user.id, ".")
            time.sleep(3)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(1)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(3)
            await bot.send_message(call.from_user.id, ".")
            time.sleep(5)

        elif i == "–ú" or i == "–º":
            await bot.send_message(call.from_user.id, "_")
            time.sleep(1)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(3)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(1)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(5)

        elif i == "–ù" or i == "–Ω":
            await bot.send_message(call.from_user.id, "_")
            time.sleep(1)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(3)
            await bot.send_message(call.from_user.id, ".")
            time.sleep(5)

        elif i == "–û" or i == "–æ":
            await bot.send_message(call.from_user.id, "_")
            time.sleep(1)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(3)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(1)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(3)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(1)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(5)

        elif i == "–ü" or i == "–ø":
            await bot.send_message(call.from_user.id, ".")
            time.sleep(3)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(1)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(3)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(1)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(3)
            await bot.send_message(call.from_user.id, ".")
            time.sleep(5)

        elif i == "–†" or i == "—Ä":
            await bot.send_message(call.from_user.id, ".")
            time.sleep(3)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(1)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(3)
            await bot.send_message(call.from_user.id, ".")
            time.sleep(5)

        elif i == "–°" or i == "—Å":
            await bot.send_message(call.from_user.id, ".")
            time.sleep(3)
            await bot.send_message(call.from_user.id, ".")
            time.sleep(3)
            await bot.send_message(call.from_user.id, ".")
            time.sleep(5)

        elif i == "–¢" or i == "—Ç":
            await bot.send_message(call.from_user.id, "_")
            time.sleep(1)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(5)

        elif i == "–£" or i == "—É":
            await bot.send_message(call.from_user.id, ".")
            time.sleep(3)
            await bot.send_message(call.from_user.id, ".")
            time.sleep(3)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(1)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(5)

        elif i == "–§" or i == "—Ñ":
            await bot.send_message(call.from_user.id, ".")
            time.sleep(3)
            await bot.send_message(call.from_user.id, ".")
            time.sleep(3)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(1)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(3)
            await bot.send_message(call.from_user.id, ".")
            time.sleep(5)

        elif i == "–•" or i == "—Ö":
            await bot.send_message(call.from_user.id, ".")
            time.sleep(3)
            await bot.send_message(call.from_user.id, ".")
            time.sleep(3)
            await bot.send_message(call.from_user.id, ".")
            time.sleep(3)
            await bot.send_message(call.from_user.id, ".")
            time.sleep(5)

        elif i == "–¶" or i == "—Ü":
            await bot.send_message(call.from_user.id, "_")
            time.sleep(1)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(3)
            await bot.send_message(call.from_user.id, ".")
            time.sleep(3)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(1)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(3)
            await bot.send_message(call.from_user.id, ".")
            time.sleep(5)

        elif i == "–ß" or i == "—á":
            await bot.send_message(call.from_user.id, "_")
            time.sleep(1)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(3)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(1)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(3)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(1)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(3)
            await bot.send_message(call.from_user.id, ".")
            time.sleep(5)

        elif i == "–®" or i == "—à":
            await bot.send_message(call.from_user.id, "_")
            time.sleep(1)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(3)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(1)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(3)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(1)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(3)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(1)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(5)

        elif i == "–©" or i == "—â":
            await bot.send_message(call.from_user.id, "_")
            time.sleep(1)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(3)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(1)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(3)
            await bot.send_message(call.from_user.id, ".")
            time.sleep(3)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(1)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(5)

        elif i == "–´" or i == "—ã":
            await bot.send_message(call.from_user.id, "_")
            time.sleep(1)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(3)
            await bot.send_message(call.from_user.id, ".")
            time.sleep(3)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(1)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(3)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(1)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(5)

        elif i == "–¨" or i == "—å":
            await bot.send_message(call.from_user.id, "_")
            time.sleep(1)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(3)
            await bot.send_message(call.from_user.id, ".")
            time.sleep(3)
            await bot.send_message(call.from_user.id, ".")
            time.sleep(3)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(1)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(5)

        elif i == "–≠" or i == "—ç":
            await bot.send_message(call.from_user.id, ".")
            time.sleep(3)
            await bot.send_message(call.from_user.id, ".")
            time.sleep(3)
            await bot.send_message(call.from_user.id, ".")
            time.sleep(3)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(1)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(3)
            await bot.send_message(call.from_user.id, ".")
            time.sleep(3)
            await bot.send_message(call.from_user.id, ".")
            time.sleep(3)
            await bot.send_message(call.from_user.id, ".")
            time.sleep(5)

        elif i == "–Æ" or i == "—é":
            await bot.send_message(call.from_user.id, ".")
            time.sleep(3)
            await bot.send_message(call.from_user.id, ".")
            time.sleep(3)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(1)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(3)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(1)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(5)

        elif i == "–Ø" or i == "—è":
            await bot.send_message(call.from_user.id, ".")
            time.sleep(3)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(1)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(3)
            await bot.send_message(call.from_user.id, ".")
            time.sleep(3)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(1)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(5)

        elif i  == "1":
            await bot.send_message(call.from_user.id, ".")
            time.sleep(3)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(1)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(3)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(1)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(3)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(1)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(3)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(1)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(5)

        elif i  == "2":
            await bot.send_message(call.from_user.id, ".")
            time.sleep(3)
            await bot.send_message(call.from_user.id, ".")
            time.sleep(3)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(1)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(3)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(1)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(3)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(1)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(5)

        elif i  == "3":
            await bot.send_message(call.from_user.id, ".")
            time.sleep(3)
            await bot.send_message(call.from_user.id, ".")
            time.sleep(3)
            await bot.send_message(call.from_user.id, ".")
            time.sleep(3)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(1)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(3)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(1)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(5)

        elif i  == "4":
            await bot.send_message(call.from_user.id, ".")
            time.sleep(3)
            await bot.send_message(call.from_user.id, ".")
            time.sleep(3)
            await bot.send_message(call.from_user.id, ".")
            time.sleep(3)
            await bot.send_message(call.from_user.id, ".")
            time.sleep(3)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(1)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(5)

        elif i  == "5":
            await bot.send_message(call.from_user.id, ".")
            time.sleep(3)
            await bot.send_message(call.from_user.id, ".")
            time.sleep(3)
            await bot.send_message(call.from_user.id, ".")
            time.sleep(3)
            await bot.send_message(call.from_user.id, ".")
            time.sleep(3)
            await bot.send_message(call.from_user.id, ".")
            time.sleep(5)

        elif i  == "6":
            await bot.send_message(call.from_user.id, "_")
            time.sleep(1)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(3)
            await bot.send_message(call.from_user.id, ".")
            time.sleep(3)
            await bot.send_message(call.from_user.id, ".")
            time.sleep(3)
            await bot.send_message(call.from_user.id, ".")
            time.sleep(3)
            await bot.send_message(call.from_user.id, ".")
            time.sleep(5)

        elif i  == "7":
            await bot.send_message(call.from_user.id, "_")
            time.sleep(1)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(3)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(1)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(3)
            await bot.send_message(call.from_user.id, ".")
            time.sleep(3)
            await bot.send_message(call.from_user.id, ".")
            time.sleep(3)
            await bot.send_message(call.from_user.id, ".")
            time.sleep(5)

        elif i  == "8":
            await bot.send_message(call.from_user.id, "_")
            time.sleep(1)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(3)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(1)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(3)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(1)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(3)
            await bot.send_message(call.from_user.id, ".")
            time.sleep(3)
            await bot.send_message(call.from_user.id, ".")
            time.sleep(5)

        elif i  == "9":
            await bot.send_message(call.from_user.id, "_")
            time.sleep(1)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(3)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(1)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(3)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(1)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(3)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(1)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(3)
            await bot.send_message(call.from_user.id, ".")
            time.sleep(5)

        elif i  == "0":
            await bot.send_message(call.from_user.id, "_")
            time.sleep(1)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(3)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(1)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(3)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(1)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(3)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(1)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(3)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(1)
            await bot.send_message(call.from_user.id, "_")
            time.sleep(5)

        elif i == " " or i == "M" or i == "\n" or i == "." or i == "-" or i == "Ô∏èÔ∏è_":
            await bot.send_message(call.from_user.id, "_____")
            time.sleep(2)

    print(assas)


def register_message_handler_call_sity_info_key_mm(dp: Dispatcher):
    dp.register_message_handler(call_weather_sity_key_mm)
